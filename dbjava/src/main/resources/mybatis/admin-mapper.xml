<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.javabang.repository.AdminDAO">
	
	<select id="selectAllRoom" parameterType="paging" resultType="rent">
		select * from rent
			order by
					idx desc
				offset #{offset} rows
				fetch next #{perPage} rows only
	</select>
	
	<update id="permitAccomodation" parameterType="int">
		update rent 
    		set state = 1 where idx = #{idx}
	</update>
	<update id="cencelAccomodation" parameterType="int">
		update rent 
    		set state = 0 where idx = #{idx}
	</update>
	
	<select id="selectCount" resultType="int">
		select count(*) from rent
	</select>
	
	<select id="selectAllReservation" resultType="reservation">
		select RV.*, M.userName, M.userId, RE.roomtype, RE.title from reservation RV 
   			join member M on RV.member = M.idx
    		join rent RE on RV.rent = RE.idx
	</select>
	
	<select id="selectAllReservationSearch" parameterType="string" resultType="reservation">
		select RV.*, M.userName, M.userId, RE.roomtype, RE.title from reservation RV 
   			join member M on RV.member = M.idx
    		join rent RE on RV.rent = RE.idx where M.userId like '%${search}%'
	</select> 
	
	<insert id="insertReport" parameterType="report">
		insert into report 
			(member, rent, reportType, content) 
			values (#{member}, #{rent}, #{reportType}, #{content})
	</insert>
	
	<select id="selectAllReport" resultType="report">
		select RP.*, M.userId,M.userName, M.userNick, RE.title from report RP 
			join member M on RP.member = M.idx
			join rent RE on RP.rent = RE.idx
	</select>
	
	<select id="selectAllReportSearch" resultType="report">
		select RP.*, M.userId,M.userName, M.userNick, RE.title from report RP 
			join member M on RP.member = M.idx
			join rent RE on RP.rent = RE.idx 
				where M.userId like '%${search}%'
	</select>
	
	<insert id="insertReviewReport" parameterType="reviewReport">
		insert into reviewReport
			(member, review, reportType, content)
			values (#{member}, #{review}, #{reportType}, #{content})
	</insert>
	
	<select id="selectAllReviewReport" resultType="reviewReport">
		SELECT rr.*,m.userId, m.userName, r.content as reviewContent, member_of_review.userId as reviewWriterId, member_of_review.userName as reviewWriterName, r.reportStatus,r.idx as reviewIdx
			FROM reviewReport rr
			JOIN member m ON m.idx = rr.member -- member related to reviewReport
			JOIN review r ON r.idx = rr.review
			JOIN member member_of_review ON member_of_review.idx = r.member
	</select>
	
	<select id="selectAllReviewReportSearch" parameterType="string" resultType="reviewReport">
		SELECT rr.*,m.userId, m.userName, r.content as reviewContent, member_of_review.userId as reviewWriterId, member_of_review.userName as reviewWriterName, r.reportStatus,r.idx as reviewIdx
			FROM reviewReport rr
			JOIN member m ON m.idx = rr.member -- member related to reviewReport
			JOIN review r ON r.idx = rr.review
			JOIN member member_of_review ON member_of_review.idx = r.member	
				where m.userId like '%${search}%'
	</select>
</mapper>